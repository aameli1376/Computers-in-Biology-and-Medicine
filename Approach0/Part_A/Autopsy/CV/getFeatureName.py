import os
from sklearn.ensemble import RandomForestClassifier
import pandas as pd
from sklearn import metrics
import matplotlib.pyplot as plt
from sklearn.metrics import PrecisionRecallDisplay
from sklearn.metrics import RocCurveDisplay
from sklearn.model_selection import RepeatedStratifiedKFold
import numpy as np

if __name__ == "__main__":

    print("Select the most common SNPs from Autopsy dataset and check those SNPs quality for getting the accuracy on Autopsy:")    
    
    # SNPs index retrieved from SVFs running on dataset
    SNPsDic = {121059: 17, 157950: 17, 131829: 17, 135507: 17, 86187: 17, 28418: 16, 7527: 16, 6034: 16, 86194: 16, 121057: 16, 158047: 16, 137201: 15, 124332: 15, 7596: 15, 121118: 15, 158069: 15, 37375: 14, 118280: 14, 93185: 14, 113221: 13, 86191: 13, 147510: 13, 38830: 13, 124481: 13, 175460: 13, 139811: 13, 59572: 13, 71360: 13, 130826: 13, 48322: 12, 115819: 12, 18368: 12, 6036: 12, 106541: 12, 18358: 12, 179869: 12, 28399: 12, 51406: 12, 93184: 12, 86185: 12, 24232: 12, 93179: 11, 92411: 11, 126261: 11, 140064: 11, 175403: 11, 92467: 11, 42908: 11, 149649: 11, 49495: 11, 92576: 11, 38840: 11, 135506: 11, 147507: 11, 86007: 11, 38836: 11, 170757: 11, 57994: 11, 38824: 11, 106967: 11, 46922: 11, 52576: 11, 69542: 11, 109353: 10, 62778: 10, 154696: 10, 11537: 10, 93178: 10, 113219: 10, 55556: 10, 92470: 10, 48327: 10, 40261: 10, 28407: 10, 40233: 10, 62705: 10, 87828: 10, 90956: 10, 124670: 10, 46917: 10, 99966: 10, 172295: 10, 42947: 10, 82692: 10, 92570: 10, 140527: 10, 81005: 10, 115815: 10, 31937: 10, 55376: 10, 27283: 10, 25991: 10, 168641: 10, 135516: 9, 42906: 9, 98874: 9, 179306: 9, 164913: 9, 55377: 9, 62717: 9, 121061: 9, 172298: 9, 131303: 9, 28421: 9, 91478: 9, 68658: 9, 154124: 9, 62698: 9, 20059: 9, 30424: 9, 7617: 9, 92713: 9, 162011: 9, 155345: 9, 129517: 9, 71359: 9, 152261: 9, 169357: 9, 98459: 9, 42961: 9, 129338: 9, 37699: 9, 161456: 9, 158064: 9, 42129: 9, 26453: 9, 9456: 9, 14347: 9, 85883: 8, 171634: 8, 55437: 8, 59838: 8, 40237: 8, 130063: 8, 55375: 8, 127794: 8, 97676: 8, 170121: 8, 12061: 8, 46890: 8, 93191: 8, 142819: 8, 157389: 8, 89896: 8, 171637: 8, 7591: 8, 107629: 8, 95043: 8, 79576: 8, 127453: 8, 6883: 8, 89579: 8, 169352: 8, 111334: 8, 30429: 8, 158058: 8, 110674: 8, 60296: 8, 78290: 8, 158066: 8, 5695: 8, 125637: 8, 36177: 8, 77350: 7, 172084: 7, 19217: 7, 28434: 7, 105325: 7, 57999: 7, 173049: 7, 68627: 7, 120989: 7, 133802: 7, 131865: 7, 104094: 7, 152024: 7, 63975: 7, 132334: 7, 31567: 7, 20064: 7, 109354: 7, 42938: 7, 67713: 7, 136979: 7, 157665: 7, 13030: 7, 30423: 7, 180587: 7, 57977: 7, 137366: 7, 142825: 7, 121806: 7, 25974: 7, 13518: 7, 28423: 7, 82193: 7, 144147: 7, 151462: 7, 115820: 7, 31574: 7, 55186: 7, 173837: 7, 79574: 7, 79572: 7, 112437: 7, 67974: 7, 161538: 7, 9440: 7, 12063: 7, 92477: 7, 113227: 7, 168270: 7, 168834: 7, 46887: 7, 92335: 7, 16073: 7, 24226: 7, 21353: 7, 40991: 7, 124462: 7, 104614: 6, 56345: 6, 131866: 6, 8089: 6, 86705: 6, 164911: 6, 154120: 6, 172857: 6, 19095: 6, 136247: 6, 37680: 6, 163633: 6, 3227: 6, 175324: 6, 28913: 6, 98448: 6, 38291: 6, 161940: 6, 102624: 6, 116389: 6, 172058: 6, 132815: 6, 93192: 6, 105657: 6, 159871: 6, 77038: 6, 46918: 6, 154121: 6, 104630: 6, 111593: 6, 168636: 6, 68649: 6, 111599: 6, 59878: 6, 59867: 6, 55177: 6, 84072: 6, 81004: 6, 7593: 6, 24254: 6, 31554: 6, 163634: 6, 53187: 6, 19058: 6, 173040: 6, 40231: 6, 79568: 6, 45019: 6, 79904: 6, 127454: 6, 24204: 6, 8065: 6, 7595: 6, 128431: 6, 60294: 6, 98864: 6, 24651: 6, 162507: 6, 17770: 6, 53327: 6, 98659: 6, 126247: 6, 16795: 6, 124323: 6, 67576: 6, 18559: 6, 162508: 6, 117707: 6, 158041: 6, 92478: 6, 89463: 6, 158065: 6, 170840: 6, 98958: 6, 18471: 6, 30425: 6, 161941: 6, 130198: 6, 12060: 6, 148438: 6, 65838: 6, 7611: 6, 168613: 6, 79570: 5, 161519: 5, 89120: 5, 52359: 5, 74783: 5, 19218: 5, 19222: 5, 160499: 5, 55420: 5, 98965: 5, 43673: 5, 11423: 5, 30115: 5, 43301: 5, 121800: 5, 173044: 5, 168638: 5, 37253: 5, 172867: 5, 126565: 5, 179310: 5, 18551: 5, 130437: 5, 109364: 5, 28430: 5, 46885: 5, 160850: 5, 41565: 5, 9429: 5, 133946: 5, 1547: 5, 137194: 5, 20061: 5, 37722: 5, 153488: 5, 170132: 5, 46902: 5, 40989: 5, 103784: 5, 18360: 5, 19079: 5, 106401: 5, 128268: 5, 163632: 5, 146093: 5, 50763: 5, 116606: 5, 25972: 5, 173050: 5, 178612: 5, 10693: 5, 36310: 5, 5850: 5, 1905: 5, 180333: 5, 88714: 5, 166927: 5, 86533: 5, 174431: 5, 106961: 5, 98871: 5, 18359: 5, 60058: 5, 46896: 5, 18369: 5, 17754: 5, 92510: 5, 52588: 5, 108073: 5, 123611: 5, 11644: 5, 140070: 5, 168647: 5, 107249: 5, 159821: 5, 30430: 5, 6954: 5, 3459: 5, 203: 5, 131840: 5, 171861: 5, 11645: 5, 42915: 5, 14781: 5, 31872: 5, 88950: 5, 67715: 5, 158074: 5, 52595: 5, 124667: 5, 175326: 5, 119420: 5, 25969: 5, 144060: 5, 53760: 5, 65859: 5, 133950: 5, 150575: 5, 28441: 5, 85251: 5, 130223: 5}

    
    SNPsList = list(SNPsDic.keys())
    print(SNPsList)

    # needs to be replaced by the path of files
    path = '/users/fs1/aameli/Start_from_scratch/Approach0/Datasets/'

    print("current path of working space= " + path)
  
        
    # This is the smaller dataset (we found the SNPs from this dataset)
    print("Reading 1Autopsy.csv ...")
    df= pd.read_csv(path + "1Autopsy.csv")
    
    count_row = df.shape[0]  # gives number of row count
    count_col = df.shape[1]  # gives number of col count

    print("The Number Samples in This Dataset: " + str(count_row))
    print("The Number Features in This Dataset: " + str(count_col))

    # X contains selected features except the labels
    x = df.iloc[:, SNPsList]
    # x = df.iloc[:, df.columns.isin(SNPsList)]
    
    print(x.shape)
    
    for col in x.columns:
      print(col)
import os
from sklearn.ensemble import RandomForestClassifier
import pandas as pd
from sklearn import metrics
import matplotlib.pyplot as plt
from sklearn.metrics import PrecisionRecallDisplay
from sklearn.metrics import RocCurveDisplay
from sklearn.model_selection import RepeatedStratifiedKFold
import numpy as np

if __name__ == "__main__":

    print("Select the most common SNPs from merged version of (Familial and NINDS1) dataset and check those SNPs quality for getting the accuracy:")    
    
    SNPsDic = {267134: 27, 54696: 27, 238498: 27, 284951: 26, 107709: 26, 19574: 26, 231972: 25, 257492: 25, 189615: 24, 180805: 24, 273440: 24, 237366: 23, 3295: 23, 32385: 23, 267066: 23, 291647: 23, 295116: 22, 270632: 22, 213364: 22, 266887: 22, 285668: 22, 156841: 21, 115005: 21, 26434: 21, 136443: 21, 195799: 21, 101368: 21, 37021: 21, 30005: 21, 119981: 20, 47730: 20, 29714: 20, 84517: 20, 199229: 20, 18403: 20, 236872: 20, 48378: 20, 157003: 20, 152006: 20, 131754: 19, 26798: 19, 63662: 19, 205265: 19, 22297: 19, 189462: 19, 110449: 19, 284260: 19, 270156: 19, 109875: 19, 81186: 19, 267064: 19, 24427: 18, 165587: 18, 12441: 18, 289232: 18, 115163: 18, 251074: 18, 112730: 18, 280477: 18, 237835: 18, 139300: 18, 61836: 18, 274335: 18, 167820: 18, 53612: 18, 52017: 18, 262883: 17, 189461: 17, 247730: 17, 219229: 17, 287220: 17, 63607: 17, 183233: 17, 115043: 17, 128517: 17, 63444: 17, 13118: 17, 81165: 17, 198601: 17, 10287: 17, 18022: 17, 270197: 17, 209971: 17, 210377: 17, 16243: 17, 183704: 17, 94699: 17, 302101: 16, 99328: 16, 154794: 16, 137696: 16, 89265: 16, 188810: 16, 199080: 16, 13100: 16, 69605: 16, 104820: 16, 173798: 16, 69022: 16, 84689: 16, 251451: 16, 246364: 16, 156834: 16, 100287: 16, 251877: 16, 129311: 16, 278840: 16, 100083: 16, 1133: 15, 21566: 15, 197917: 15, 99436: 15, 232724: 15, 164298: 15, 302614: 15, 262472: 15, 287580: 15, 166763: 15, 110466: 15, 258039: 15, 169569: 15, 122205: 15, 143475: 15, 3652: 15, 6783: 15, 261906: 15, 85150: 15, 207283: 15, 22296: 15, 92708: 14, 188322: 14, 28929: 14, 238431: 14, 256732: 14, 165279: 14, 249287: 14, 188396: 14, 229630: 14, 165747: 14, 6348: 14, 130807: 14, 170156: 14, 22173: 14, 224839: 14, 86666: 14, 86665: 14, 262626: 14, 144816: 14, 9426: 14, 159616: 14, 133956: 14, 80764: 14, 20841: 14, 45471: 14, 25200: 13, 152240: 13, 232651: 13, 183052: 13, 80466: 13, 191366: 13, 237242: 13, 12475: 13, 208606: 13, 263495: 13, 68202: 13, 49705: 13, 125840: 13, 2736: 13, 152728: 13, 175358: 13, 166615: 13, 123235: 13, 148753: 13, 25252: 13, 166614: 13, 50382: 12, 166129: 12, 74034: 12, 136250: 12, 118865: 12, 260638: 12, 119166: 12, 155171: 12, 131480: 12, 180556: 12, 28782: 12, 213279: 12, 52507: 12, 30003: 12, 72468: 12, 237401: 12, 228179: 12, 205689: 12, 305480: 12, 104723: 12, 237045: 12, 239177: 12, 27857: 12, 131479: 12, 26348: 12, 189519: 12, 274748: 12, 101338: 12, 143655: 12, 131629: 11, 45475: 11, 212479: 11, 19238: 11, 249576: 11, 135700: 11, 302716: 11, 240478: 11, 160062: 11, 1829: 11, 304199: 11, 122049: 11, 173980: 11, 257332: 11, 283408: 11, 142909: 11, 305141: 11, 193783: 11, 199649: 11, 28729: 11, 189560: 11, 228340: 11, 245200: 11, 287717: 11, 177727: 11, 40273: 11, 150980: 11, 165911: 11, 179396: 11, 156608: 11, 187824: 11, 187415: 11, 63054: 11, 65703: 11, 71788: 11, 205885: 11, 48202: 11, 116247: 11, 75879: 11, 155936: 11, 94891: 11, 241488: 11, 200011: 11, 123535: 10, 207218: 10, 298766: 10, 68191: 10, 55786: 10, 129051: 10, 292534: 10, 259608: 10, 283729: 10, 295432: 10, 269228: 10, 152306: 10, 304052: 10, 296159: 10, 79697: 10, 248227: 10, 304720: 10, 82262: 10, 285964: 10, 225830: 10, 28385: 10, 60513: 10, 29581: 10, 182847: 10, 165741: 10, 198446: 10, 180807: 10, 225288: 10, 128520: 10, 47272: 10, 154433: 10, 63802: 10, 264042: 10, 117308: 10, 127001: 10, 67835: 10, 178898: 10, 267048: 10, 20216: 10, 221190: 10, 241480: 10, 35962: 10, 227775: 10, 42270: 10, 223047: 10, 289596: 10, 115440: 10, 299422: 10, 114673: 10, 199647: 9, 226461: 9, 52126: 9, 300756: 9, 70560: 9, 181753: 9, 56159: 9, 121035: 9, 70609: 9, 230234: 9, 228051: 9, 298144: 9, 165049: 9, 61071: 9, 76285: 9, 253252: 9, 198008: 9, 231207: 9, 174053: 9, 81646: 9, 244049: 9, 61859: 9, 160157: 9, 154432: 9, 221033: 9, 132716: 9, 100007: 9, 46044: 9, 69162: 9, 54301: 9, 79998: 9, 62956: 9, 160982: 9, 27239: 9, 90791: 9, 114094: 9, 237509: 9, 166890: 9, 155555: 9, 141592: 9, 117813: 9, 234627: 9, 84476: 9, 117190: 9, 198465: 9, 22340: 9, 261907: 9, 96092: 9, 40015: 9, 246631: 9, 207579: 9, 280742: 9, 123427: 8, 214142: 8, 95974: 8, 299800: 8, 304430: 8, 164211: 8, 8219: 8, 282140: 8, 149876: 8, 31041: 8, 271268: 8, 162822: 8, 297863: 8, 142099: 8, 14860: 8, 191608: 8, 55931: 8, 165308: 8, 195739: 8, 271077: 8, 251470: 8, 250353: 8, 37731: 8, 206236: 8, 26639: 8, 150209: 8, 220735: 8, 231374: 8, 244330: 8, 100783: 8, 53648: 8, 164267: 8, 213423: 8, 171585: 8, 195952: 8, 198463: 8, 187256: 8, 296156: 8, 72166: 8, 72374: 8, 172106: 8, 141654: 8, 207960: 8, 225065: 8, 149305: 8, 158999: 8, 206237: 8, 131016: 8, 253162: 8, 22172: 8, 304200: 8, 137694: 8, 236620: 8, 146849: 8, 100582: 8, 219192: 8, 82988: 8, 296555: 8, 154431: 8, 38287: 8, 13465: 8, 299207: 8, 214599: 7, 190732: 7, 281582: 7, 131014: 7, 274706: 7, 86230: 7, 1410: 7, 67590: 7, 285304: 7, 81667: 7, 57726: 7, 295418: 7, 259755: 7, 273784: 7, 121611: 7, 266640: 7, 66391: 7, 189880: 7, 45517: 7, 75611: 7, 21110: 7, 293634: 7, 109143: 7, 139711: 7, 275599: 7, 154298: 7, 43826: 7, 118349: 7, 165050: 7, 182911: 7, 89377: 7, 45663: 7, 239102: 7, 295511: 7, 221057: 7, 248032: 7, 13917: 7, 9661: 7, 274430: 7, 62433: 7, 257902: 7, 288339: 7, 79700: 7, 257678: 7, 89501: 7, 137486: 7, 256344: 7, 223944: 7, 274000: 7, 230429: 7, 60522: 7, 257199: 7, 221856: 7, 146086: 7, 210751: 7, 279558: 7, 175319: 7, 242960: 7, 51929: 7, 176665: 7, 137302: 7, 66401: 7, 71268: 7, 92142: 7, 297996: 7, 198467: 7, 241483: 7, 119743: 7, 242746: 7, 264416: 7, 118785: 7, 247764: 7, 67541: 7, 113419: 7, 304404: 7, 203888: 7, 204666: 7, 50745: 7, 35617: 7, 249608: 7, 70641: 7, 180070: 7, 81562: 7, 299330: 7, 37152: 7, 21674: 7, 24322: 7, 184255: 7, 2171: 7, 302624: 7, 43018: 7, 6741: 7, 39394: 7, 300647: 6, 158321: 6, 118905: 6, 176003: 6, 30683: 6, 44342: 6, 1316: 6, 24611: 6, 153718: 6, 136905: 6, 226820: 6, 21069: 6, 224349: 6, 155572: 6, 278397: 6, 20718: 6, 284895: 6, 303072: 6, 30428: 6, 263688: 6, 113957: 6, 282654: 6, 175547: 6, 229325: 6, 77521: 6, 157987: 6, 114288: 6, 135173: 6, 200495: 6, 20127: 6, 243898: 6, 284904: 6, 304875: 6, 200713: 6, 273864: 6, 249479: 6, 246720: 6, 295963: 6, 177603: 6, 31769: 6, 280973: 6, 298846: 6, 274244: 6, 162293: 6, 140948: 6, 299227: 6, 127841: 6, 214506: 6, 231903: 6, 25272: 6, 206235: 6, 194892: 6, 173260: 6, 298149: 6, 302231: 6, 181319: 6, 276656: 6, 60632: 6, 245202: 6, 169651: 6, 222730: 6, 273968: 6, 266592: 6, 114392: 6, 194516: 6, 145110: 6, 192414: 6, 63382: 6, 5572: 6, 300003: 6, 15220: 6, 18011: 6, 231798: 6, 168940: 6, 266664: 6, 134394: 6, 196628: 6, 170187: 6, 10050: 6, 51103: 6, 84890: 6, 192036: 6, 61463: 6, 297636: 6, 233304: 6, 299112: 6, 175938: 6, 144080: 6, 259477: 6, 153060: 6, 221193: 6, 202649: 6, 63370: 6, 304350: 6, 168113: 6, 14235: 6, 111021: 6, 277314: 6, 7674: 6, 303447: 6, 265370: 6, 79974: 6, 54856: 6, 293708: 6, 286722: 6, 49348: 6, 76194: 6, 101286: 6, 20427: 6, 213251: 6, 231549: 6, 302282: 6, 227311: 6, 17565: 6, 298285: 6, 8929: 6, 204856: 6, 161985: 6, 151192: 6, 58034: 6, 254932: 6, 70429: 6, 145082: 6, 127178: 6, 277633: 6, 133186: 6, 196091: 6, 229907: 6, 182658: 6, 69832: 6, 196273: 6, 279552: 6, 15939: 6, 242565: 6, 300422: 6, 28693: 6, 13866: 6, 186974: 6, 55997: 6, 130080: 6, 48284: 6, 209442: 6, 288366: 6, 223800: 6, 94934: 6, 271362: 6, 217631: 5, 176297: 5, 126830: 5, 77357: 5, 250513: 5, 282021: 5, 174283: 5, 144357: 5, 275249: 5, 269061: 5, 289821: 5, 127190: 5, 32050: 5, 216546: 5, 26524: 5, 256574: 5, 298468: 5, 189028: 5, 44217: 5, 166259: 5, 81140: 5, 144414: 5, 105287: 5, 284029: 5, 107486: 5, 50290: 5, 232967: 5, 61178: 5, 253300: 5, 265377: 5, 190755: 5, 265161: 5, 298134: 5, 70058: 5, 238457: 5, 266021: 5, 299914: 5, 1562: 5, 20480: 5, 105766: 5, 191108: 5, 245149: 5, 246243: 5, 233703: 5, 131283: 5, 162356: 5, 206973: 5, 207108: 5, 293279: 5, 267311: 5, 293281: 5, 104907: 5, 111944: 5, 5571: 5, 84946: 5, 10239: 5, 230879: 5, 130206: 5, 248482: 5, 51487: 5, 299416: 5, 271079: 5, 269229: 5, 249250: 5, 302592: 5, 155431: 5, 285968: 5, 71439: 5, 41874: 5, 124158: 5, 47007: 5, 229337: 5, 218513: 5, 233964: 5, 202938: 5, 111874: 5, 117239: 5, 97604: 5, 140650: 5, 208238: 5, 279297: 5, 38108: 5, 191719: 5, 206864: 5, 298328: 5, 97603: 5, 304740: 5, 101381: 5, 300296: 5, 38112: 5, 257999: 5, 267097: 5, 287786: 5, 96750: 5, 112394: 5, 226811: 5, 275008: 5, 266013: 5, 297904: 5, 21153: 5, 302273: 5, 131490: 5, 194162: 5, 18264: 5, 64058: 5, 48637: 5, 200173: 5, 230997: 5, 201305: 5, 102422: 5, 186884: 5, 127579: 5, 119040: 5, 127086: 5, 61841: 5, 58629: 5, 146750: 5, 69852: 5, 36718: 5, 203604: 5, 236461: 5, 260349: 5, 234319: 5, 5348: 5, 235122: 5, 300276: 5, 259600: 5, 80809: 5, 89492: 5, 299806: 5, 89709: 5, 89496: 5, 47904: 5, 256223: 5, 168949: 5, 132020: 5, 77090: 5, 83753: 5, 72352: 5, 227207: 5, 40115: 5, 46362: 5, 76915: 5, 186241: 5, 230209: 5, 241485: 5, 138870: 5, 5222: 5, 244098: 5, 241484: 5, 179755: 5, 206871: 5, 109426: 5, 55243: 5, 32662: 5, 69843: 5, 236890: 5}

    
    SNPsList = list(SNPsDic.keys())
    print(SNPsList)

    path = '/scratch/fs2/usefi/pd/datasets/All_Aproaches/Approach4/Datasets/ID/'

    print("current path of working space= " + path)
  
        
    # This is the smaller dataset (we found the SNPs from this dataset)
    print("Reading FamilyNINDS1(MergedAndBalanced).csv ...")
    df= pd.read_csv(path + "FamilyNINDS1(MergedAndBalanced).csv")
    
    count_row = df.shape[0]  # gives number of row count
    count_col = df.shape[1]  # gives number of col count

    print("The Number Samples in This Dataset: " + str(count_row))
    print("The Number Features in This Dataset: " + str(count_col))

    # X contains selected features except the labels
    x = df.iloc[:, SNPsList]
    # x = df.iloc[:, df.columns.isin(SNPsList)]
    
    print(x.shape)
    
    for col in x.columns:
      print(col)     